<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <properties resource="db.properties"></properties>
    <settings>
        <!--指定mybatis使用日志组件 -->
        <setting name="logImpl" value="LOG4J2" />
        <!--开启延时加载，如果有关联关系，则默认不会获取数据 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。
       特定关联关系中可通过设置fetchType属性来覆盖该项的开关状态。在association中指定fetchType="eager(立即)" 或者 lazy(延迟)默认：false-->
        <setting name="lazyLoadingEnabled" value="true" />
        <!--true时，对任意延迟属性的调用会使带有延迟加载属性的对象完整加载；false，每种属性将会按需加载。默认为：true-->
        <setting name="aggressiveLazyLoading" value="false" />
        <!-- Globally enables or disables any caches configured in any mapper under this configuration -->
        <setting name="cacheEnabled" value="true"/>
        <!-- Sets the number of seconds the driver will wait for a response from the database -->
        <setting name="defaultStatementTimeout" value="3000"/>
        <!-- Enables automatic mapping from classic database column names A_COLUMN to camel case classic Java property names aColumn -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!-- Allows JDBC support for generated keys. A compatible driver is required.
        This setting forces generated keys to be used if set to true,
         as some drivers deny compatibility but still work -->
        <setting name="useGeneratedKeys" value="true"/>
    </settings>

    <!-- Continue going here -->

</configuration>